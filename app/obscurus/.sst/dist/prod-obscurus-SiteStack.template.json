{
 "Resources": {
  "CustomResourceHandlerServiceRole41AEC181": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "CustomResourceHandlerE8FB56BA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "9d4cadf41257bf9ad6f4c3e456deaa19f815b4de78e3436ce6c5986ba33db9c0.zip"
    },
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "CustomResourceHandlerServiceRole41AEC181",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "CustomResourceHandlerServiceRole41AEC181"
   ]
  },
  "publicBucket5C3DBAB0": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "HEAD",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "BucketOwnerPreferred"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": false,
     "IgnorePublicAcls": false
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "publicBucketPolicy24028FED": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "publicBucket5C3DBAB0"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "publicBucket5C3DBAB0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publicBucket5C3DBAB0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "publicParameterbucketName69D24DDB": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sst/obscurus/prod/Bucket/public/bucketName",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    },
    "Type": "String",
    "Value": {
     "Ref": "publicBucket5C3DBAB0"
    }
   }
  },
  "counterTable2B52E878": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "counter",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "counter",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "prod-obscurus-counter",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "counterParametertableNameF90FC2AA": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sst/obscurus/prod/Table/counter/tableName",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    },
    "Type": "String",
    "Value": {
     "Ref": "counterTable2B52E878"
    }
   }
  },
  "UsersTable6D91A5EE": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "sub",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "sub",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "prod-obscurus-Users",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "UsersParametertableNameBE329B3D": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sst/obscurus/prod/Table/Users/tableName",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    },
    "Type": "String",
    "Value": {
     "Ref": "UsersTable6D91A5EE"
    }
   }
  },
  "RoomsTableAE5AE38B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "room_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "room_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "prod-obscurus-Rooms",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "RoomsParametertableNameCD6871BF": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sst/obscurus/prod/Table/Rooms/tableName",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    },
    "Type": "String",
    "Value": {
     "Ref": "RoomsTableAE5AE38B"
    }
   }
  },
  "siteS3Bucket2B2851F3": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteS3BucketPolicyBB4DF05F": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "siteS3Bucket2B2851F3"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "siteS3Bucket2B2851F3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "siteS3Bucket2B2851F3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "siteS3Bucket2B2851F3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "siteS3Bucket2B2851F3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "siteDistributionOrigin3S3Origin7C72BBD7",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "siteS3Bucket2B2851F3",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "siteS3BucketAutoDeleteObjectsCustomResource3E10A2DE": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "siteS3Bucket2B2851F3"
    }
   },
   "DependsOn": [
    "siteS3BucketPolicyBB4DF05F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteCloudFrontFunctionE91DD486": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "\nfunction handler(event) {\n  var request = event.request;\n  request.headers[\"x-forwarded-host\"] = request.headers.host;\n  return request;\n}",
    "FunctionConfig": {
     "Comment": "ca-central-1prodobscurusSiteStacksiteCloudFrontFunction3ED97F7B",
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": "ca-central-1prodobscurusSiteStacksiteCloudFrontFunction3ED97F7B"
   }
  },
  "siteServerFunctionAssetReplacerPolicy304BF125": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":s3:::cdk-hnb659fds-assets-548311273921-ca-central-1/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteServerFunctionAssetReplacerPolicy304BF125",
    "Roles": [
     {
      "Ref": "CustomResourceHandlerServiceRole41AEC181"
     }
    ]
   }
  },
  "siteServerFunctionAssetReplacer9A11D516": {
   "Type": "Custom::AssetReplacer",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomResourceHandlerE8FB56BA",
      "Arn"
     ]
    },
    "bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
    "key": "09ba685c37f6b38d321d0b1c309d7fa7542fc9eca50aff29ff2958ea5b286043.zip",
    "replacements": [
     {
      "files": "**/*.@(*js|json|html)",
      "search": "{{ TABLE_NAME }}",
      "replace": {
       "Ref": "counterTable2B52E878"
      }
     },
     {
      "files": "**/*.@(*js|json|html)",
      "search": "{{ CACHE_BUCKET_NAME }}",
      "replace": {
       "Ref": "siteS3Bucket2B2851F3"
      }
     },
     {
      "files": "**/*.@(*js|json|html)",
      "search": "{{ CACHE_BUCKET_KEY_PREFIX }}",
      "replace": "_cache"
     },
     {
      "files": "**/*.@(*js|json|html)",
      "search": "{{ CACHE_BUCKET_REGION }}",
      "replace": "ca-central-1"
     }
    ]
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacerPolicy304BF125"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteServerFunctionServiceRole8328A688": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516"
   ]
  },
  "siteServerFunctionServiceRoleDefaultPolicy6EA49472": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "publicBucket5C3DBAB0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publicBucket5C3DBAB0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "counterTable2B52E878",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "counterTable2B52E878",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "siteS3Bucket2B2851F3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "siteS3Bucket2B2851F3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "siteRevalidationQueue355EB7DA",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "siteRevalidationTable79579F77",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "siteRevalidationTable79579F77",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteServerFunctionServiceRoleDefaultPolicy6EA49472",
    "Roles": [
     {
      "Ref": "siteServerFunctionServiceRole8328A688"
     }
    ]
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516"
   ]
  },
  "siteServerFunction6DFA6F1B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "09ba685c37f6b38d321d0b1c309d7fa7542fc9eca50aff29ff2958ea5b286043.zip"
    },
    "Description": "Next.js server",
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "counterTable2B52E878"
      },
      "CACHE_BUCKET_NAME": {
       "Ref": "siteS3Bucket2B2851F3"
      },
      "CACHE_BUCKET_KEY_PREFIX": "_cache",
      "CACHE_BUCKET_REGION": "ca-central-1",
      "SST_APP": "obscurus",
      "SST_STAGE": "prod",
      "SST_SSM_PREFIX": "/sst/obscurus/prod/",
      "SST_Bucket_bucketName_public": {
       "Ref": "publicBucket5C3DBAB0"
      },
      "SST_Table_tableName_counter": {
       "Ref": "counterTable2B52E878"
      },
      "REVALIDATION_QUEUE_URL": {
       "Ref": "siteRevalidationQueue355EB7DA"
      },
      "REVALIDATION_QUEUE_REGION": "ca-central-1",
      "CACHE_DYNAMO_TABLE": {
       "Ref": "siteRevalidationTable79579F77"
      }
     }
    },
    "Handler": "nextjssite-index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "siteServerFunctionServiceRole8328A688",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516",
    "siteServerFunctionServiceRoleDefaultPolicy6EA49472",
    "siteServerFunctionServiceRole8328A688"
   ]
  },
  "siteServerFunctionLogRetention7123678D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "siteServerFunction6DFA6F1B"
       }
      ]
     ]
    },
    "RetentionInDays": 3
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516"
   ]
  },
  "siteServerFunctionFunctionUrl1B09C490": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "InvokeMode": "BUFFERED",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "siteServerFunction6DFA6F1B",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516"
   ]
  },
  "siteServerFunctioninvokefunctionurlEABB57E1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "siteServerFunction6DFA6F1B",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   },
   "DependsOn": [
    "siteServerFunctionAssetReplacer9A11D516"
   ]
  },
  "siteImageFunctionServiceRoleAD5B95E2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteImageFunctionServiceRoleDefaultPolicy39F33332": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "siteS3Bucket2B2851F3",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteImageFunctionServiceRoleDefaultPolicy39F33332",
    "Roles": [
     {
      "Ref": "siteImageFunctionServiceRoleAD5B95E2"
     }
    ]
   }
  },
  "siteImageFunctionD6B403E9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "a931eb23ac7622ee98ab5e6b95c7f8744126224bbbd19272f57d4939842ae083.zip"
    },
    "Description": "Next.js image optimizer",
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "siteS3Bucket2B2851F3"
      },
      "BUCKET_KEY_PREFIX": "_assets"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 1536,
    "Role": {
     "Fn::GetAtt": [
      "siteImageFunctionServiceRoleAD5B95E2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 25
   },
   "DependsOn": [
    "siteImageFunctionServiceRoleDefaultPolicy39F33332",
    "siteImageFunctionServiceRoleAD5B95E2"
   ]
  },
  "siteImageFunctionLogRetentionD1B5BECE": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "siteImageFunctionD6B403E9"
       }
      ]
     ]
    },
    "RetentionInDays": 3
   }
  },
  "siteImageFunctionFunctionUrl110B87E7": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "siteImageFunctionD6B403E9",
      "Arn"
     ]
    }
   }
  },
  "siteImageFunctioninvokefunctionurl443403A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "siteImageFunctionD6B403E9",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   }
  },
  "siteS3UploaderPolicyE1EE6C9F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CustomResourceHandlerE8FB56BA",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:ListBucket",
        "s3:PutObject",
        "s3:DeleteObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "siteS3Bucket2B2851F3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "siteS3Bucket2B2851F3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":s3:::cdk-hnb659fds-assets-548311273921-ca-central-1/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteS3UploaderPolicyE1EE6C9F",
    "Roles": [
     {
      "Ref": "CustomResourceHandlerServiceRole41AEC181"
     }
    ]
   }
  },
  "siteS3UploaderCAFDFF58": {
   "Type": "Custom::S3Uploader",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomResourceHandlerE8FB56BA",
      "Arn"
     ]
    },
    "sources": [
     {
      "bucketName": "cdk-hnb659fds-assets-548311273921-ca-central-1",
      "objectKey": "4530ce42570b77c7e02b208f6c76c82e4cc47746a038dccedefb43c7b0b8ccee.zip"
     }
    ],
    "destinationBucketName": {
     "Ref": "siteS3Bucket2B2851F3"
    },
    "textEncoding": "utf-8",
    "fileOptions": [
     {
      "files": "**",
      "ignore": "_assets/_next/**",
      "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=8640"
     },
     {
      "files": "_assets/_next/**",
      "cacheControl": "public,max-age=31536000,immutable"
     }
    ],
    "replaceValues": [
     {
      "files": "**/*.html",
      "search": "{{ TABLE_NAME }}",
      "replace": {
       "Ref": "counterTable2B52E878"
      }
     },
     {
      "files": "**/*.js",
      "search": "{{ TABLE_NAME }}",
      "replace": {
       "Ref": "counterTable2B52E878"
      }
     },
     {
      "files": "**/*.json",
      "search": "{{ TABLE_NAME }}",
      "replace": {
       "Ref": "counterTable2B52E878"
      }
     }
    ]
   },
   "DependsOn": [
    "siteS3UploaderPolicyE1EE6C9F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteServerCacheDD54ACDF": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": "SST server response cache policy",
     "DefaultTTL": 0,
     "MaxTTL": 31536000,
     "MinTTL": 0,
     "Name": "prodobscurusSiteStacksiteServerCache92EC3F49-ca-central-1",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": true,
      "EnableAcceptEncodingGzip": true,
      "HeadersConfig": {
       "HeaderBehavior": "whitelist",
       "Headers": [
        "accept",
        "rsc",
        "next-router-prefetch",
        "next-router-state-tree",
        "next-url"
       ]
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "all"
      }
     }
    }
   }
  },
  "siteCertificateCertificateRequestorFunctionServiceRole713C0E1E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF666908B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "acm:RequestCertificate",
        "acm:DescribeCertificate",
        "acm:DeleteCertificate",
        "acm:AddTagsToCertificate"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:GetChange",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:changeResourceRecordSets",
       "Condition": {
        "ForAllValues:StringEquals": {
         "route53:ChangeResourceRecordSetsRecordTypes": [
          "CNAME"
         ],
         "route53:ChangeResourceRecordSetsActions": [
          "UPSERT"
         ]
        },
        "ForAllValues:StringLike": {
         "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
          "*.obscurus.me"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":route53:::hostedzone/Z09403151W7ZFKPC0YJEL"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF666908B",
    "Roles": [
     {
      "Ref": "siteCertificateCertificateRequestorFunctionServiceRole713C0E1E"
     }
    ]
   }
  },
  "siteCertificateCertificateRequestorFunction67D0DA6E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "a1466b91ba8942c1f5251540844c3af7879992dead6cbbd88e38bfb77a07ad8d.zip"
    },
    "Handler": "index.certificateRequestHandler",
    "Role": {
     "Fn::GetAtt": [
      "siteCertificateCertificateRequestorFunctionServiceRole713C0E1E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "siteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF666908B",
    "siteCertificateCertificateRequestorFunctionServiceRole713C0E1E"
   ]
  },
  "siteCertificateCertificateRequestorResource6EC2A2A2": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "siteCertificateCertificateRequestorFunction67D0DA6E",
      "Arn"
     ]
    },
    "DomainName": "obscurus.me",
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Region": "us-east-1",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteDistributionOrigin3S3Origin7C72BBD7": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Identity for prodobscurusSiteStacksiteDistributionOrigin38C5CFD50"
    }
   }
  },
  "siteDistribution706F5265": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "obscurus.me"
     ],
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": {
        "Ref": "siteServerCacheDD54ACDF"
       },
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "siteCloudFrontFunctionE91DD486",
           "FunctionARN"
          ]
         }
        }
       ],
       "LambdaFunctionAssociations": [],
       "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
       "PathPattern": "api/*",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin199B13633",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": {
        "Ref": "siteServerCacheDD54ACDF"
       },
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "siteCloudFrontFunctionE91DD486",
           "FunctionARN"
          ]
         }
        }
       ],
       "LambdaFunctionAssociations": [],
       "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
       "PathPattern": "_next/data/*",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin199B13633",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": {
        "Ref": "siteServerCacheDD54ACDF"
       },
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "siteCloudFrontFunctionE91DD486",
           "FunctionARN"
          ]
         }
        }
       ],
       "LambdaFunctionAssociations": [],
       "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
       "PathPattern": "_next/image*",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin23FB64D1D",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "BUILD_ID",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "Cloud-Data-Upload-icon.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "Facebook_Logo_Dark.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "Facebook_Logo_Light.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "Google_Logo.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "Microsoft_Logo.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "_next/*",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "favicon.ico",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "logo.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "next-js-seeklogo.com.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "next.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "sst-icon-seeklogo.com.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "CachedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "Compress": true,
       "PathPattern": "tailwindcss.svg",
       "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": {
       "Ref": "siteServerCacheDD54ACDF"
      },
      "CachedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "Compress": true,
      "FunctionAssociations": [
       {
        "EventType": "viewer-request",
        "FunctionARN": {
         "Fn::GetAtt": [
          "siteCloudFrontFunctionE91DD486",
          "FunctionARN"
         ]
        }
       }
      ],
      "LambdaFunctionAssociations": [],
      "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
      "TargetOriginId": "prodobscurusSiteStacksiteDistributionOrigin199B13633",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginReadTimeout": 10,
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         0,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "//",
               {
                "Fn::GetAtt": [
                 "siteServerFunctionFunctionUrl1B09C490",
                 "FunctionUrl"
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       "Id": "prodobscurusSiteStacksiteDistributionOrigin199B13633"
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         0,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "//",
               {
                "Fn::GetAtt": [
                 "siteImageFunctionFunctionUrl110B87E7",
                 "FunctionUrl"
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       "Id": "prodobscurusSiteStacksiteDistributionOrigin23FB64D1D"
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "siteS3Bucket2B2851F3",
         "RegionalDomainName"
        ]
       },
       "Id": "prodobscurusSiteStacksiteDistributionOrigin38C5CFD50",
       "OriginPath": "/_assets",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "siteDistributionOrigin3S3Origin7C72BBD7"
           }
          ]
         ]
        }
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Fn::GetAtt": [
        "siteCertificateCertificateRequestorResource6EC2A2A2",
        "Arn"
       ]
      },
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteAliasRecordD2C115B7": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "siteDistribution706F5265",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Name": "obscurus.me.",
    "Type": "A"
   }
  },
  "siteAliasRecordAAAA8C79A8E1": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "siteDistribution706F5265",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Name": "obscurus.me.",
    "Type": "AAAA"
   }
  },
  "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRole131C2EB5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCBF5AD5B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "acm:RequestCertificate",
        "acm:DescribeCertificate",
        "acm:DeleteCertificate",
        "acm:AddTagsToCertificate"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:GetChange",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:changeResourceRecordSets",
       "Condition": {
        "ForAllValues:StringEquals": {
         "route53:ChangeResourceRecordSetsRecordTypes": [
          "CNAME"
         ],
         "route53:ChangeResourceRecordSetsActions": [
          "UPSERT"
         ]
        },
        "ForAllValues:StringLike": {
         "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
          "*.www.obscurus.me",
          "*.www.obscurus.me"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":route53:::hostedzone/Z09403151W7ZFKPC0YJEL"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCBF5AD5B",
    "Roles": [
     {
      "Ref": "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRole131C2EB5"
     }
    ]
   }
  },
  "siteRedirectRedirectCertificateCertificateRequestorFunction2E544157": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "a1466b91ba8942c1f5251540844c3af7879992dead6cbbd88e38bfb77a07ad8d.zip"
    },
    "Handler": "index.certificateRequestHandler",
    "Role": {
     "Fn::GetAtt": [
      "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRole131C2EB5",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyCBF5AD5B",
    "siteRedirectRedirectCertificateCertificateRequestorFunctionServiceRole131C2EB5"
   ]
  },
  "siteRedirectRedirectCertificateCertificateRequestorResource56707D86": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "siteRedirectRedirectCertificateCertificateRequestorFunction2E544157",
      "Arn"
     ]
    },
    "DomainName": "www.obscurus.me",
    "SubjectAlternativeNames": [
     "www.obscurus.me"
    ],
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Region": "us-east-1",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteRedirectRedirectBucketFF886B0F": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "WebsiteConfiguration": {
     "RedirectAllRequestsTo": {
      "HostName": "obscurus.me",
      "Protocol": "https"
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteRedirectRedirectDistributionCFDistribution08638C9C": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "www.obscurus.me"
     ],
     "Comment": "Redirect to obscurus.me from www.obscurus.me",
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "ForwardedValues": {
       "Cookies": {
        "Forward": "none"
       },
       "QueryString": false
      },
      "TargetOriginId": "origin1",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "CustomOriginConfig": {
        "HTTPPort": 80,
        "HTTPSPort": 443,
        "OriginKeepaliveTimeout": 5,
        "OriginProtocolPolicy": "http-only",
        "OriginReadTimeout": 30,
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::GetAtt": [
             "siteRedirectRedirectBucketFF886B0F",
             "WebsiteURL"
            ]
           }
          ]
         }
        ]
       },
       "Id": "origin1"
      }
     ],
     "PriceClass": "PriceClass_All",
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Fn::GetAtt": [
        "siteRedirectRedirectCertificateCertificateRequestorResource56707D86",
        "Arn"
       ]
      },
      "SslSupportMethod": "sni-only"
     }
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteRedirectRedirectAliasRecord135423DDD40CB0": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "siteRedirectRedirectDistributionCFDistribution08638C9C",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Name": "www.obscurus.me.",
    "Type": "A"
   }
  },
  "siteRedirectRedirectAliasRecordSix1354232FE7C309": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "siteRedirectRedirectDistributionCFDistribution08638C9C",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z09403151W7ZFKPC0YJEL",
    "Name": "www.obscurus.me.",
    "Type": "AAAA"
   }
  },
  "siteServerFunctionInvalidatorPolicy004B2ED1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudfront::548311273921:distribution/",
          {
           "Ref": "siteDistribution706F5265"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteServerFunctionInvalidatorPolicy004B2ED1",
    "Roles": [
     {
      "Ref": "siteServerFunctionServiceRole8328A688"
     }
    ]
   }
  },
  "siteCloudFrontInvalidatorPolicyEE18C654": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudfront:GetInvalidation",
        "cloudfront:CreateInvalidation"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudfront::548311273921:distribution/",
          {
           "Ref": "siteDistribution706F5265"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteCloudFrontInvalidatorPolicyEE18C654",
    "Roles": [
     {
      "Ref": "CustomResourceHandlerServiceRole41AEC181"
     }
    ]
   }
  },
  "siteCloudFrontInvalidator18BEA866": {
   "Type": "Custom::CloudFrontInvalidator",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomResourceHandlerE8FB56BA",
      "Arn"
     ]
    },
    "version": "OJMbwzyoNl9RowYvwxeFS",
    "distributionId": {
     "Ref": "siteDistribution706F5265"
    },
    "paths": [
     "/*"
    ],
    "wait": false
   },
   "DependsOn": [
    "siteCloudFrontInvalidatorPolicyEE18C654",
    "siteS3UploaderCAFDFF58"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteRevalidationQueue355EB7DA": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "FifoQueue": true,
    "ReceiveMessageWaitTimeSeconds": 20,
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteRevalidationFunctionServiceRole02D71DA1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "siteRevalidationFunctionServiceRoleDefaultPolicy57C55CA4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "siteRevalidationQueue355EB7DA",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteRevalidationFunctionServiceRoleDefaultPolicy57C55CA4",
    "Roles": [
     {
      "Ref": "siteRevalidationFunctionServiceRole02D71DA1"
     }
    ]
   }
  },
  "siteRevalidationFunctionEB84F6D0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "a64b73f24d776224595b603de24cb86fcfe927f2ba9d315e955e02a8cb9749e1.zip"
    },
    "Description": "Next.js revalidator",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "siteRevalidationFunctionServiceRole02D71DA1",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "siteRevalidationFunctionServiceRoleDefaultPolicy57C55CA4",
    "siteRevalidationFunctionServiceRole02D71DA1"
   ]
  },
  "siteRevalidationFunctionSqsEventSourceprodobscurusSiteStacksiteRevalidationQueue2F7BF51C9368148F": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "siteRevalidationQueue355EB7DA",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "siteRevalidationFunctionEB84F6D0"
    }
   }
  },
  "siteRevalidationTable79579F77": {
   "Type": "AWS::DynamoDB::GlobalTable",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "tag",
      "AttributeType": "S"
     },
     {
      "AttributeName": "path",
      "AttributeType": "S"
     },
     {
      "AttributeName": "revalidatedAt",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "revalidate",
      "KeySchema": [
       {
        "AttributeName": "path",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "revalidatedAt",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "tag",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "path",
      "KeyType": "RANGE"
     }
    ],
    "Replicas": [
     {
      "GlobalSecondaryIndexes": [
       {
        "IndexName": "revalidate"
       }
      ],
      "PointInTimeRecoverySpecification": {
       "PointInTimeRecoveryEnabled": true
      },
      "Region": "ca-central-1"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "siteParameterurl3D1716BC": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sst/obscurus/prod/NextjsSite/site/url",
    "Tags": {
     "sst:app": "obscurus",
     "sst:stage": "prod"
    },
    "Type": "String",
    "Value": "https://obscurus.me"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "siteS3Bucket2B2851F3"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ]
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-548311273921-ca-central-1",
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "obscurus"
     },
     {
      "Key": "sst:stage",
      "Value": "prod"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Outputs": {
  "Site": {
   "Value": "https://obscurus.me"
  },
  "SSTMetadata": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "{\"app\":\"obscurus\",\"stage\":\"prod\",\"version\":\"2.35.1\",\"metadata\":[{\"id\":\"public\",\"addr\":\"c83ea292158096c228f5175444636b64aeeb31f058\",\"stack\":\"prod-obscurus-SiteStack\",\"type\":\"Bucket\",\"data\":{\"name\":\"",
      {
       "Ref": "publicBucket5C3DBAB0"
      },
      "\",\"notifications\":[],\"notificationNames\":[]}},{\"id\":\"counter\",\"addr\":\"c8df111ace9cc1439553b9e12b2a3827f7771f4e3e\",\"stack\":\"prod-obscurus-SiteStack\",\"type\":\"Table\",\"data\":{\"tableName\":\"",
      {
       "Ref": "counterTable2B52E878"
      },
      "\",\"consumers\":[]}},{\"id\":\"Users\",\"addr\":\"c8f0da5853674a09413df58df366fc5819ba2b8386\",\"stack\":\"prod-obscurus-SiteStack\",\"type\":\"Table\",\"data\":{\"tableName\":\"",
      {
       "Ref": "UsersTable6D91A5EE"
      },
      "\",\"consumers\":[]}},{\"id\":\"Rooms\",\"addr\":\"c8845c8cc7ea98f1e16257683672ab8850123b0089\",\"stack\":\"prod-obscurus-SiteStack\",\"type\":\"Table\",\"data\":{\"tableName\":\"",
      {
       "Ref": "RoomsTableAE5AE38B"
      },
      "\",\"consumers\":[]}},{\"id\":\"site\",\"addr\":\"c8a9921bec52f8ae559460576859d85e07e30f60d3\",\"stack\":\"prod-obscurus-SiteStack\",\"data\":{\"mode\":\"deployed\",\"path\":\".\",\"runtime\":\"nodejs18.x\",\"customDomainUrl\":\"https://obscurus.me\",\"url\":\"https://",
      {
       "Fn::GetAtt": [
        "siteDistribution706F5265",
        "DomainName"
       ]
      },
      "\",\"edge\":false,\"server\":\"",
      {
       "Fn::GetAtt": [
        "siteServerFunction6DFA6F1B",
        "Arn"
       ]
      },
      "\",\"secrets\":[]},\"type\":\"NextjsSite\"},{\"id\":\"ServerFunction\",\"addr\":\"c8fca1c725614e53cf4ac1c0ed15aa00bed0de1369\",\"stack\":\"prod-obscurus-SiteStack\",\"type\":\"Function\",\"data\":{\"arn\":\"",
      {
       "Fn::GetAtt": [
        "siteServerFunction6DFA6F1B",
        "Arn"
       ]
      },
      "\",\"runtime\":\"nodejs18.x\",\"handler\":\"nextjssite-index.handler\",\"localId\":\"c8fca1c725614e53cf4ac1c0ed15aa00bed0de1369\",\"secrets\":[]}}]}"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}